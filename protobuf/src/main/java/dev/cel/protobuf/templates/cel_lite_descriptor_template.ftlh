/**
* Generated by CEL-Java library. DO NOT EDIT!
* Version: ${version}
*/

package ${package_name};

import javax.annotation.Generated;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableMap;
import dev.cel.protobuf.CelLiteDescriptor;

@Generated("//protobuf/src/main/java/dev/cel/protobuf:java_file_generator")
public final class ${descriptor_class_name} extends CelLiteDescriptor {
  private static final ${descriptor_class_name} DESCRIPTOR = new ${descriptor_class_name}();

  public static ${descriptor_class_name} getDescriptor() {
    return DESCRIPTOR;
  }

  private static ImmutableList<MessageInfo> newMessageInfoList() {
     ImmutableList.Builder<MessageInfo> messageInfoListBuilder = ImmutableList.builder();
     <#list message_info_list as message_info>
       messageInfoListBuilder.add(
          new MessageInfo(
            "${message_info.fullyQualifiedProtoName}",
            "${message_info.fullyQualifiedProtoJavaClassName}",
            ImmutableMap.<String, FieldInfo>builder()
              <#list message_info.fieldInfoMap as key, value>
              .put("${key}", new FieldInfo(
                "${value.fullyQualifiedProtoName}",
                "${value.javaTypeName}",
                "${value.methodSuffixName}",
                "${value.fieldJavaClassName}",
                "${value.fieldValueType}",
                "${value.protoFieldType}",
                "${value.hasHasser}"
                ))
              </#list>
              .build()
          )
     );
     </#list>

     return messageInfoListBuilder.build();
  }

  private ${descriptor_class_name}() {
    super(newMessageInfoList());
  }
}