# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "pb"

imports:
- name: cel.expr.conformance.proto3.TestAllTypes
- name: cel.expr.conformance.proto3.TestAllTypes.NestedEnum
  # Note: Following enum is CEL-Java only.
- name: |
    dev.cel.testing.testdata.proto3.StandaloneGlobalEnum

rule:
  match:
  - condition: >
      spec.single_int32 > TestAllTypes{single_int64: 10}.single_int64
    output: |
      "invalid spec, got single_int32=" + string(spec.single_int32) + ", wanted <= 10"
#       TODO: replace when string.format is available
#      "invalid spec, got single_int32=%d, wanted <= 10".format([spec.single_int32])
  - condition: >
      spec.standalone_enum == NestedEnum.BAR ||
      StandaloneGlobalEnum.SGAR == StandaloneGlobalEnum.SGOO
    output: |
      "invalid spec, neither nested nor imported enums may refer to BAR"