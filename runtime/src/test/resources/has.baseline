Source: has(x.single_int32) && !has(x.single_int64) && has(x.single_bool_wrapper) && has(x.single_int32_wrapper) && !has(x.single_int64_wrapper) && has(x.repeated_int32) && !has(x.repeated_int64) && has(x.optional_bool) && !has(x.optional_string) && has(x.oneof_bool) && !has(x.oneof_type) && has(x.map_int32_int64) && !has(x.map_string_string) && has(x.single_nested_message) && !has(x.single_duration)
declare x {
  value cel.expr.conformance.proto3.TestAllTypes
}
=====>
bindings: {x=single_int32: 1
optional_bool: false
single_nested_message {
  bb: 43
}
repeated_int32: 1
map_int32_int64 {
  key: 1
  value: 2
}
single_int32_wrapper {
  value: 42
}
single_bool_wrapper {
}
oneof_bool: false
}
result:   true
